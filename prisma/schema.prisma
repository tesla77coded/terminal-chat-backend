generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User Model: Represents a user in the terminal chat application
enum Role {
  USER
  ADMIN
}

// User Model: Represents a user in the terminal chat application
model User {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  username    String      @unique
  email       String      @unique
  password    String
  role        Role        @default(USER) 
  publicKey   String?  

  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations:
  sentMessages      Message[]   @relation("SenderMessages")
  receivedMessages  Message[]   @relation("ReceiverMessages")
}

// Message Model: Represents a single chat message exchanged between two users

model Message {

  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  timestamp          DateTime @default(now())
  read               Boolean  @default(false)

  // store two encrypted versions
  contentForSender   Json
  contentForReceiver Json

  // relations
  senderId   String @db.ObjectId
  sender     User   @relation("SenderMessages",   fields: [senderId],   references: [id])

  receiverId String @db.ObjectId
  receiver   User   @relation("ReceiverMessages", fields: [receiverId], references: [id])

  @@index([senderId, receiverId, timestamp])
  }
